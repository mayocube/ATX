{"ast":null,"code":"var _jsxFileName = \"/Users/morganhondros/Documents/ATX Float/atx-float2/trydo/src/elements/common/TypingAnimation.jsx\";\nimport React, { useState, useEffect } from 'react';\nconst TypingAnimation = ({\n  text,\n  elementType = 'p',\n  typingSpeed = 50\n}) => {\n  const [displayText, setDisplayText] = useState('');\n  const [isTyping, setIsTyping] = useState(true);\n  useEffect(() => {\n    let currentIndex = 0;\n    const typingInterval = setInterval(() => {\n      if (currentIndex === text.length) {\n        setIsTyping(false);\n        clearInterval(typingInterval);\n      } else {\n        setDisplayText(text.substring(0, currentIndex + 1));\n        currentIndex++;\n      }\n    }, typingSpeed);\n    return () => clearInterval(typingInterval);\n  }, [text, typingSpeed]);\n  const Element = elementType;\n  return /*#__PURE__*/React.createElement(Element, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, displayText, isTyping && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"typing-cursor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 20\n    }\n  }, \"|\"));\n};\nexport default TypingAnimation;","map":{"version":3,"names":["React","useState","useEffect","TypingAnimation","text","elementType","typingSpeed","displayText","setDisplayText","isTyping","setIsTyping","currentIndex","typingInterval","setInterval","length","clearInterval","substring","Element","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className"],"sources":["/Users/morganhondros/Documents/ATX Float/atx-float2/trydo/src/elements/common/TypingAnimation.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst TypingAnimation = ({ text, elementType = 'p', typingSpeed = 50 }) => {\n  const [displayText, setDisplayText] = useState('');\n  const [isTyping, setIsTyping] = useState(true);\n\n  useEffect(() => {\n    let currentIndex = 0;\n\n    const typingInterval = setInterval(() => {\n      if (currentIndex === text.length) {\n        setIsTyping(false);\n        clearInterval(typingInterval);\n      } else {\n        setDisplayText(text.substring(0, currentIndex + 1));\n        currentIndex++;\n      }\n    }, typingSpeed);\n\n    return () => clearInterval(typingInterval);\n  }, [text, typingSpeed]);\n\n  const Element = elementType;\n\n  return (\n    <Element>\n      {displayText}\n      {isTyping && <span className=\"typing-cursor\">|</span>}\n    </Element>\n  );\n};\n\nexport default TypingAnimation;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAElD,MAAMC,eAAe,GAAGA,CAAC;EAAEC,IAAI;EAAEC,WAAW,GAAG,GAAG;EAAEC,WAAW,GAAG;AAAG,CAAC,KAAK;EACzE,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACd,IAAIS,YAAY,GAAG,CAAC;IAEpB,MAAMC,cAAc,GAAGC,WAAW,CAAC,MAAM;MACvC,IAAIF,YAAY,KAAKP,IAAI,CAACU,MAAM,EAAE;QAChCJ,WAAW,CAAC,KAAK,CAAC;QAClBK,aAAa,CAACH,cAAc,CAAC;MAC/B,CAAC,MAAM;QACLJ,cAAc,CAACJ,IAAI,CAACY,SAAS,CAAC,CAAC,EAAEL,YAAY,GAAG,CAAC,CAAC,CAAC;QACnDA,YAAY,EAAE;MAChB;IACF,CAAC,EAAEL,WAAW,CAAC;IAEf,OAAO,MAAMS,aAAa,CAACH,cAAc,CAAC;EAC5C,CAAC,EAAE,CAACR,IAAI,EAAEE,WAAW,CAAC,CAAC;EAEvB,MAAMW,OAAO,GAAGZ,WAAW;EAE3B,oBACEL,KAAA,CAAAkB,aAAA,CAACD,OAAO;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACLjB,WAAW,EACXE,QAAQ,iBAAIT,KAAA,CAAAkB,aAAA;IAAMO,SAAS,EAAC,eAAe;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,GAAO,CAC7C,CAAC;AAEd,CAAC;AAED,eAAerB,eAAe"},"metadata":{},"sourceType":"module"}